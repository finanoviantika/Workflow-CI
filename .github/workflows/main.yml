name: Workflow-CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLproject/dataset_preprocessing.csv"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository
      - name: Run actions/checkout@v3
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_WORKFLOW }}

      # Setup Python
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # Check Env
      - name: Check Env
        run: |
          echo $CSV_URL

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow

      # Run ML project
      - name: Run MLflow project
        run: |
          mlflow run MLproject --env-manager=local

      # Get latest MLflow run_id
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td MLproject/mlruns/0/*/ | head -n 1 | cut -d'/' -f4 || echo "")
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      # Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas scikit-learn

      # Upload artifacts to GitHub
      - name: Upload to Github
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: |
            mlruns/
            MLproject/
          if-no-files-found: error

      # Build Docker Model
      - name: Build Docker Model
        run: |
          docker build -t ml-model:latest .

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag ml-model:latest ${{ secrets.DOCKER_HUB_USERNAME }}/ml-model:latest

      # Push Docker Image
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ml-model:latest

      # Cleanup
      - name: Post Log in to Docker Hub
        run: |
          echo "Docker logout completed"
